version: 2.1

orbs:
  python: circleci/python@0.2.1
  gcp-gcr: circleci/gcp-gcr@0.7.1

# Commands: https://circleci.com/docs/2.0/configuration-reference/#commands-requires-version-21  
commands:
  install-ansible:
    description: "Install Ansible"
    steps:
      - run: 
          name: "Installing Python3"
          command: |
            sudo apt update
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            PATH=/home/circleci/miniconda3/bin:$PATH
            echo PATH=/home/circleci/miniconda3/bin:$PATH >> ~/.bash_rc
            which pip; pip --version 
      - run:
          name: "Installing Ansible"
          command: |
            which pip; pip --version 
            PATH=/home/circleci/miniconda3/bin:$PATH
            which /home/circleci/miniconda3/bin/pip; /home/circleci/miniconda3/bin/pip --version
            /home/circleci/miniconda3/bin/pip install --upgrade /home/circleci/miniconda3/bin/pip
            git clone https://github.com/ansible/ansible.git
            cd ansible; git checkout tags/v2.10.0b1
            /home/circleci/miniconda3/bin/pip install .
            which ansible


jobs:
  build-test:
    working_directory: ~/app
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - run:
          command: sudo apt-get install pylint
      - python/save-cache
      - run:
          command: pylint -d=R,W,C jobs/
 

  deploy:
    working_directory: ~/app
    executor: gcp-gcr/default    
    steps:    
      - checkout
      - install-ansible
      # build and push Docker image
      - gcp-gcr/build-image:
          image: superpython
          registry-url: asia.gcr.io
          dockerfile: Dockerfile
          tag: latest
      - gcp-gcr/gcr-auth
      - gcp-gcr/push-image:
          image: superpython
          registry-url: asia.gcr.io
          tag: latest
          digest-path: /tmp/digest.txt
      - run: |
          echo "Digest is: $(</tmp/digest.txt)"

# echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
# docker push CircleCI-Public/circleci-demo-docker:$TAG


workflows:
  build-test:
    jobs:
      #- build-test
      - deploy:
          # requires:
          #   - build-test # Only deploy once the build job has completed
          filters:
            branches:
              only: master # Only deploy on the master branch        
