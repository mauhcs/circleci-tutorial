version: 2.1

orbs:
  python: circleci/python@0.2.1
  gcp-gcr: circleci/gcp-gcr@0.7.1


commands: 
  install-ansible:
    steps:
      - run: pip install ansible==2.9

  set-image-tag:
    steps:
      - run: |

          if [ -z "$CIRCLE_TAG" ]
          then 
            ver=`git describe --abbrev=0`;echo "export DOCKER_TAG=TEST:$ver.$CIRCLE_BUILD_NUM" >> $BASH_ENV
          else
            ver=`git describe --abbrev=0`;echo "export DOCKER_TAG=$ver.$CIRCLE_BUILD_NUM" >> $BASH_ENV
          fi
          echo DOCKER_TAG = $DOCKER_TAG



jobs:
  pylint-test:
    working_directory: ~/app
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - run: pip install pylint 
      - python/save-cache
      - run: python -m pylint -d=R,W,C jobs/
  
  docker-build-push:
    executor: gcp-gcr/default
    steps:
      - checkout
      # build and push Docker image
      #- set-image-tag
      - run: |
          ls -la
          pwd
          cd $CIRCLE_PROJECT_REPONAME
          export DOCKER_TAG=`git describe --abbrev=0`
          cd -
      - gcp-gcr/build-image:
          image: superpython
          registry-url: asia.gcr.io
          dockerfile: Dockerfile
          tag: $DOCKER_TAG.$CIRCLE_BUILD_NUM
      - gcp-gcr/gcr-auth
      - gcp-gcr/push-image:
          image: superpython
          registry-url: asia.gcr.io
          tag: $DOCKER_TAG.$CIRCLE_BUILD_NUM
          digest-path: /tmp/digest.txt
      - run: |
          echo "Digest is: $(</tmp/digest.txt)"

  deploy-prod:
    executor: python/default
    environment:    
      - ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - python/load-cache
      - install-ansible
      - python/save-cache      
      - run: 
          name: Deploy to VM
          command: |
              echo "$HOST_PROD ansible_python_interpreter=/usr/bin/python3" >> inventory/target
              ansible-playbook -i inventory/target  playbooks/up.yml

  deploy-test:
    executor: python/default
    environment:    
      - ANSIBLE_HOST_KEY_CHECKING: False
    steps:
      - checkout
      - python/load-cache
      - install-ansible
      - python/save-cache      
      - run: 
          name: Deploy to VM
          command: |
              echo "$HOST_TEST ansible_python_interpreter=/usr/bin/python3" >> inventory/target
              ansible-playbook -i inventory/target  playbooks/up.yml    


workflows:
  build-test:
    jobs:
      - pylint-test
      - docker-build-push:
          requires:
            - pylint-test
          filters:
            branches:
              only: master # Only deploy on the master branch            
      - deploy-prod:
          requires:
            - pylint-test
            - docker-build-push # Only deploy once the build job has completed
          filters:
            branches:
              only: master # Only deploy on the master branch
